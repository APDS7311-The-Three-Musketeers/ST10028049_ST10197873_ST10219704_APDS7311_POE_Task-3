# version: 2.1

# jobs:
#   build:
#     docker:
#       - image: cimg/ruby:2.7.1-node
#     steps:
#       - checkout
#       - run:
#           name: "Update Node.js and npm"
#           command: |
#             curl -sSL "https://nodejs.org/dist/v11.10.0/node-v11.10.0-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v11.10.0-linux-x64/bin/node
#             curl https://www.npmjs.com/install.sh | sudo bash
#       - run:
#           name: Check current version of node
#           command: node -v



version: 2.1
commands: # a reusable command with parameters
  greeting:
    parameters:
      to:
        default: "world"
        type: string
    steps:
      - run: echo "Hello <<parameters.to>>"
jobs:
  my-job:
    docker:
      - image: cimg/base:stable
    steps:
      - greeting:
          to: "My-Name"
workflows:
  my-workflow:
    jobs:
      - my-job




# # Couldn't automatically generate a config from your source code.
# # This is a generic template to serve as a base for your custom config
# # See: https://circleci.com/docs/configuration-reference
# # Stacks detected: cicd:empty:
# version: 2.1
# jobs:
#   test:
#     docker:
#       - image: cimg/base:stable
#     steps:
#       - checkout
#       # Replace this with a real test runner invocation
#       - run:
#           name: Run tests
#           command: echo 'replace me with real tests!' && false
#   build:
#     docker:
#       - image: cimg/base:stable
#     steps:
#       - checkout
#       # Replace this with steps to build a package, or executable
#       - run:
#           name: Build an artifact
#           command: touch example.txt
#       - store_artifacts:
#           path: example.txt
#   deploy:
#     docker:
#       - image: cimg/base:stable
#     steps:
#       # Replace this with steps to deploy to users
#       - run:
#           name: deploy
#           command: '#e.g. ./deploy.sh'
#       - run:
#           name: found empty repo
#           command: ':'
# workflows:
#   example:
#     jobs:
#       - test
#       - build:
#           requires:
#             - test
#       - deploy:
#           requires:
#             - test
